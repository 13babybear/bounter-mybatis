<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:db.properties"/>

	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter" lazy-init="true">
		<description>状态过滤器</description>
		<property name="slowSqlMillis" value="3000" />
		<property name="logSlowSql" value="true" />
		<property name="mergeSql" value="true" />
	</bean>
	
	<!-- druid数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
      <!-- 基本属性 url、user、password -->
      <property name="url" value="${db.url}" />
      <property name="username" value="${db.username}" />
      <property name="password" value="${db.password}" />
        
      <!-- 配置初始化大小、最小、最大 -->
      <property name="initialSize" value="20" />
      <property name="minIdle" value="1" /> 
      <property name="maxActive" value="40" />
   
      <!-- 配置获取连接等待超时的时间 -->
      <property name="maxWait" value="60000" />
   
      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
      <property name="timeBetweenEvictionRunsMillis" value="60000" />
   
      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
      <property name="minEvictableIdleTimeMillis" value="300000" />
    
      <property name="validationQuery" value="SELECT 'x'" />
      <property name="testWhileIdle" value="true" />
      <property name="testOnBorrow" value="false" />
      <property name="testOnReturn" value="false" />
   
      <!-- 配置监控统计拦截的filters -->
      <property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
			</list>
		</property>
  </bean>
    
	<!-- myBatis begin -->
    <bean id="sqlSessionFactory" 
	  class="org.mybatis.spring.SqlSessionFactoryBean"
	  p:dataSource-ref="dataSource"
	  p:configLocation="classpath:mybatis-config.xml"
	  p:mapperLocations="classpath*:com/bounter/mybatis/mapper/*.xml"/>
	
	<bean class="org.mybatis.spring.SqlSessionTemplate">
	   <constructor-arg ref="sqlSessionFactory"/>
	</bean> 
	  
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	      <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	      <property name="basePackage" value="com.bounter.mybatis.dao"/>
	</bean>
	<!-- myBatis end -->
	
	<!-- 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

	<!-- 开启Spring声明式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>